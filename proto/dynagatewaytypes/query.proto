syntax = "proto3";

option go_package = "go.dynactionize.com/dynagatewaytypes";
option java_package = "com.dynactionize.dynagatewaytypes";
option java_generic_services = true;

import "dynagatewaytypes/enums.proto";
import "dynagatewaytypes/general_types.proto";
import "dynagatewaytypes/action.proto";
import "dynagatewaytypes/topology.proto";
import "dynagatewaytypes/instance.proto";

package dynagatewaytypes;


message CursorCountReq {
    string cursor = 2;
}

message QueryReq {
    oneof root {
        WhereClauseBranchNode branch = 2;
        WhereClauseLeafNode leaf = 3;
    }
}

message WhereClauseBranchNode {
    LogicalOperator logical_operator = 1;
    repeated WhereClauseChildNode children = 2;
}

message WhereClauseChildNode{
    oneof child {
        WhereClauseBranchNode branch = 2;
        WhereClauseLeafNode leaf = 3;
    }
}

message WhereClauseLeafNode {
    WhereObject object = 1;
    WhereOperator operator = 2;
    oneof value {
        Value single = 3;
        ValueList list = 4;
    }

    ComponentType component = 5;
    int32 position = 10;
    string label = 11;
}

message ComponentFilter {
    ComponentType type = 1;
    int32 position = 2;
    string label = 3;
}

message ActionQueryRes {
    string cursor = 1;
    int64 count = 2;
}

message TopologyQueryRes {
    string cursor = 1;
    int64 count = 2;
}

message InstanceQueryRes {
    string cursor = 1;
    int64 count = 2;
    int64 number_action_topologies = 3;
    int64 number_actions = 4;
    int64 number_topologies = 5;
}

message WideColumnQueryRes {
    string cursor = 1;
    int64 count = 2;
    repeated string column_names = 3;
}

message ActionFetchReq {
    string cursor = 2;
    repeated ActionSortField sorting = 3;
    Window window = 4;
}

message TopologyFetchReq {
    string cursor = 2;
    repeated TopologySortField sorting = 3;
    Window window = 4;
}

message InstanceFetchReq {
    string cursor = 2;
    repeated InstanceSortField sorting = 3;
    Window window = 4;
    bool return_action_id = 5;
    bool return_topology_id = 6;
}

message GetSubSetMetaDataReq {
    string cursor = 2;
    InstanceSubSetSelector selector = 3;
    bool return_labels = 4;
}

message GetWideColumnNamesReq {
    string cursor = 2;
}

message CountSubSetInstancesReq {
    string cursor = 2;
    oneof sub_set_meta_data {
        ActionSubSetMetaData action_meta_data = 3;
        TopologySubSetMetaData topology_meta_data = 4;
        ActionTopologyPairSubSetMetaData action_topology_pair_meta_data = 5;
    }
}

message FetchInstanceSubSetReq {
    string cursor = 2;
    repeated InstanceSortField sorting = 3;
    oneof sub_set_meta_data {
        ActionSubSetMetaData action_meta_data = 4;
        TopologySubSetMetaData topology_meta_data = 5;
        ActionTopologyPairSubSetMetaData action_topology_pair_meta_data = 6;
    }
    Window window = 7;
}

message WideColumnTableFetchReq {
    string cursor = 2;
    Window window = 3;
    bool include_action_id = 4;
    bool include_topology_id = 5;
    bool include_row_number = 6;
    repeated InstanceSortField sorting = 7;
}

message ActionSortField {
    SortObject field = 1;
    bool descending = 2;
}

message TopologySortField {
    SortObject field = 1;
    bool descending = 2;
}

message DataTypeSortFunctions {
    DataType data_type = 1;
    repeated SortFunction sort_function = 2;
}

message InstanceSortField {
    oneof field {
        SortObject object = 1;
        int32 topology_position = 2;
        string label = 3;
    }
    bool descending = 4;
    repeated DataTypeSortFunctions sort_functions = 5;
}

message WideColumnItem {
    string instance_id = 1;
    repeated ValueList cells = 2; 
    string action_id = 3;
    string topology_id = 4;
}

message ActionFetchRes {
    int64 stream_index = 1;
    oneof response {
        StreamElementError error = 2;
        ActionResItem item = 3;
    }
}

message TopologyFetchRes {
    int64 stream_index = 1;
    oneof response {
        StreamElementError error = 2;
        TopologyResItem item = 3;
    }
}

message InstanceFetchRes {
    int64 stream_index = 1;
    oneof response {
        StreamElementError error = 2;
        InstanceResItem item = 3;
    }
}

message ActionSubSetMetaData {
    repeated Action actions = 1;
}

message TopologySubSetMetaData {
    repeated Topology topologies = 1;
}

message ActionTopologyPair {
    Action action = 1;
    Topology topology = 2;
    repeated string labels = 3;
}

message ActionTopologyPairSubSetMetaData {
    repeated ActionTopologyPair action_topology_pairs = 1;
}

message GetSubSetMetaDataRes {
    int64 stream_index = 1;
    oneof response {
        StreamElementError error = 2;
        GetSubSetMetaDataResItem item = 3;
    }
}

message GetSubSetMetaDataResItem {
    int64 count = 1;
    oneof meta_data {
        ActionSubSetMetaData action_meta_data = 2;
        TopologySubSetMetaData topology_meta_data = 3;
        ActionTopologyPairSubSetMetaData action_topology_pair_meta_data = 4;
    }
}

message GetWideColumnNamesRes {
    int64 stream_index = 1;
    oneof response {
        StreamElementError error = 2;
        GetWideColumnNamesResItem item = 3;
    }
}

message GetWideColumnNamesResItem {
    string column_name = 1;
    int64 column_position = 2;
}

message WideColumnTableFetchRes {
    int64 stream_index = 1;
    oneof response {
        StreamElementError error = 2;
        WideColumnItem item = 3;
    }
}

service QueryService {
    rpc Action(QueryReq) returns (ActionQueryRes);
    rpc Topology(QueryReq) returns (TopologyQueryRes);
    rpc Instance(QueryReq) returns (InstanceQueryRes);
    
    rpc GetSubSetMetaData(GetSubSetMetaDataReq) returns (stream GetSubSetMetaDataRes);
    rpc GetWideColumnNames(GetWideColumnNamesReq) returns (stream GetWideColumnNamesRes);

    rpc CountActions(CursorCountReq) returns (CountRes);
    rpc CountTopologies(CursorCountReq) returns (CountRes);
    rpc CountInstances(CursorCountReq) returns (CountRes);
    rpc CountSubSetInstances(CountSubSetInstancesReq) returns (CountRes);
    rpc CountWideColumnNames(CursorCountReq) returns (CountRes);

    rpc FetchActions(ActionFetchReq) returns (stream ActionFetchRes);
    rpc FetchTopologies(TopologyFetchReq) returns (stream TopologyFetchRes);
    rpc FetchInstances(InstanceFetchReq) returns (stream InstanceFetchRes);
    rpc FetchInstanceSubSet(FetchInstanceSubSetReq) returns (stream InstanceFetchRes);
    rpc FetchWideColumnTable(WideColumnTableFetchReq) returns (stream WideColumnTableFetchRes);
}
